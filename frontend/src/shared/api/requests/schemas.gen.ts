// This file is auto-generated by @hey-api/openapi-ts

export const $CreateUserDto = {
    type: 'object',
    properties: {
        username: {
            type: 'string',
            description: 'имя пользователя',
            example: 'lykovrs',
            minimum: 2,
            maximum: 30
        },
        about: {
            type: 'string',
            description: 'информация о пользователе',
            example: 'About lykovrs.',
            minimum: 2,
            maximum: 200,
            default: 'Пока ничего не рассказал о себе'
        },
        avatar: {
            type: 'string',
            description: 'ссылка на аватар',
            example: 'https://i.pravatar.cc/300',
            default: 'https://i.pravatar.cc/300'
        },
        email: {
            type: 'string',
            description: 'адрес электронной почты пользователя',
            example: 'lykovrs@gmail.com'
        },
        password: {
            type: 'string',
            description: 'пароль пользователя',
            example: 'strong_password1Aa'
        }
    },
    required: ['username', 'email', 'password']
} as const;

export const $User = {
    type: 'object',
    properties: {
        id: {
            type: 'number',
            description: 'Уникальный идентификатор',
            example: '1'
        },
        createdAt: {
            format: 'date-time',
            type: 'string',
            description: 'дата создания, тип значения Date',
            example: '2024-08-29T10:49:51.594Z'
        },
        updatedAt: {
            format: 'date-time',
            type: 'string',
            description: 'дата изменения, тип значения Date',
            example: '2024-08-29T10:49:51.594Z'
        },
        username: {
            type: 'string',
            description: 'имя пользователя',
            example: 'lykovrs',
            minimum: 2,
            maximum: 30
        },
        about: {
            type: 'string',
            description: 'информация о пользователе',
            example: 'About lykovrs.',
            minimum: 2,
            maximum: 200,
            default: 'Пока ничего не рассказал о себе'
        },
        avatar: {
            type: 'string',
            description: 'ссылка на аватар',
            example: 'https://i.pravatar.cc/300',
            default: 'https://i.pravatar.cc/300'
        },
        email: {
            type: 'string',
            description: 'адрес электронной почты пользователя',
            example: 'lykovrs@gmail.com'
        }
    },
    required: ['id', 'createdAt', 'updatedAt', 'username', 'email']
} as const;

export const $UpdateUserDto = {
    type: 'object',
    properties: {
        username: {
            type: 'string',
            description: 'имя пользователя',
            example: 'lykovrs',
            minimum: 2,
            maximum: 30
        },
        about: {
            type: 'string',
            description: 'информация о пользователе',
            example: 'About lykovrs.',
            minimum: 2,
            maximum: 200,
            default: 'Пока ничего не рассказал о себе'
        },
        avatar: {
            type: 'string',
            description: 'ссылка на аватар',
            example: 'https://i.pravatar.cc/300',
            default: 'https://i.pravatar.cc/300'
        },
        email: {
            type: 'string',
            description: 'адрес электронной почты пользователя',
            example: 'lykovrs@gmail.com'
        },
        password: {
            type: 'string',
            description: 'пароль пользователя',
            example: 'strong_password1Aa'
        }
    }
} as const;

export const $Wish = {
    type: 'object',
    properties: {
        id: {
            type: 'number',
            description: 'Уникальный идентификатор',
            example: '1'
        },
        createdAt: {
            format: 'date-time',
            type: 'string',
            description: 'дата создания, тип значения Date',
            example: '2024-08-29T10:49:51.594Z'
        },
        updatedAt: {
            format: 'date-time',
            type: 'string',
            description: 'дата изменения, тип значения Date',
            example: '2024-08-29T10:49:51.594Z'
        },
        name: {
            type: 'string',
            description: 'Заголовок мечты',
            example: 'Построить дом',
            minimum: 250,
            maximum: 1
        },
        images: {
            type: 'string',
            description: 'Изображение мечты',
            example: ['https://example.com/achievement.png', 'https://example.com/achievement.png', 'https://example.com/achievement.png'],
            items: {
                type: 'string'
            }
        },
        link: {
            type: 'string',
            description: 'ссылка на мечту',
            example: 'https://example.com/achievement',
            minimum: 1,
            maximum: 1024,
            default: ''
        },
        price: {
            type: 'number',
            description: 'Стоимость мечты',
            example: 100,
            default: ''
        },
        raised: {
            type: 'number',
            description: 'Cумма предварительного сбора или сумма, которую пользователи сейчас готовы скинуть на мечту',
            example: 100,
            default: ''
        },
        owner: {
            description: 'ссылка автора мечты',
            allOf: [
                {
                    '$ref': '#/components/schemas/User'
                }
            ]
        },
        steps: {
            description: 'Достижения, которые относятся к мечте',
            items: {
                type: 'string'
            },
            type: 'array'
        },
        description: {
            type: 'string',
            description: 'Описание подарка',
            example: 'Лучший в мире супер-пупер',
            minimum: 1024,
            maximum: 1
        },
        offers: {
            description: 'Массив ссылок на заявки скинуться от других пользователей',
            items: {
                type: 'string'
            },
            type: 'array'
        },
        copied: {
            type: 'number',
            description: 'Счётчик тех, кто скопировал мечту себе',
            example: 100,
            default: ''
        }
    },
    required: ['id', 'createdAt', 'updatedAt', 'name', 'images', 'owner', 'steps', 'description', 'offers', 'copied']
} as const;

export const $FindUserDto = {
    type: 'object',
    properties: {
        query: {
            type: 'string',
            description: 'адрес электронной почты или имя пользователя',
            minimum: 1,
            maximum: 150
        }
    },
    required: ['query']
} as const;

export const $CreateWishDto = {
    type: 'object',
    properties: {
        images: {
            type: 'string',
            description: 'Изображение мечты',
            example: ['https://example.com/achievement.png', 'https://example.com/achievement.png', 'https://example.com/achievement.png'],
            items: {
                type: 'string'
            }
        },
        price: {
            type: 'number',
            description: 'Стоимость мечты',
            example: 100,
            default: ''
        },
        description: {
            type: 'string',
            description: 'описание мечты',
            example: 'Сбросить 10 кило',
            minimum: 1,
            maximum: 1024,
            default: ''
        }
    },
    required: ['images']
} as const;

export const $UpdateWishDto = {
    type: 'object',
    properties: {
        images: {
            type: 'string',
            description: 'Изображение мечты',
            example: ['https://example.com/achievement.png', 'https://example.com/achievement.png', 'https://example.com/achievement.png'],
            items: {
                type: 'string'
            }
        },
        price: {
            type: 'number',
            description: 'Стоимость мечты',
            example: 100,
            default: ''
        },
        description: {
            type: 'string',
            description: 'описание мечты',
            example: 'Сбросить 10 кило',
            minimum: 1,
            maximum: 1024,
            default: ''
        }
    }
} as const;

export const $CreateWishlistDto = {
    type: 'object',
    properties: {}
} as const;

export const $UpdateWishlistDto = {
    type: 'object',
    properties: {}
} as const;

export const $CreateOfferDto = {
    type: 'object',
    properties: {}
} as const;

export const $CreateAchievementDto = {
    type: 'object',
    properties: {}
} as const;

export const $Achievement = {
    type: 'object',
    properties: {
        id: {
            type: 'number',
            description: 'Уникальный идентификатор',
            example: '1'
        },
        createdAt: {
            format: 'date-time',
            type: 'string',
            description: 'дата создания, тип значения Date',
            example: '2024-08-29T10:49:51.594Z'
        },
        updatedAt: {
            format: 'date-time',
            type: 'string',
            description: 'дата изменения, тип значения Date',
            example: '2024-08-29T10:49:51.594Z'
        },
        name: {
            type: 'string',
            description: 'имя пользователя',
            example: 'Пробежал 100 километров',
            minimum: 250,
            maximum: 1
        },
        image: {
            type: 'string',
            description: 'ссылка на изображение достижения',
            example: 'https://example.com/achievement.png',
            minimum: 1,
            maximum: 1024,
            default: ''
        },
        owner: {
            description: 'ссылка автора достижения',
            allOf: [
                {
                    '$ref': '#/components/schemas/User'
                }
            ]
        },
        description: {
            type: 'string',
            description: 'описание достижения',
            example: 'Продвинулся на 100 километров за последний месяц',
            minimum: 1,
            maximum: 1024,
            default: ''
        }
    },
    required: ['id', 'createdAt', 'updatedAt', 'name', 'owner']
} as const;

export const $UpdateAchievementDto = {
    type: 'object',
    properties: {}
} as const;