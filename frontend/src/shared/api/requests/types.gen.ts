// This file is auto-generated by @hey-api/openapi-ts

export type CreateUserDto = {
    /**
     * имя пользователя
     */
    username: string;
    /**
     * информация о пользователе
     */
    about?: string;
    /**
     * ссылка на аватар
     */
    avatar?: string;
    /**
     * адрес электронной почты пользователя
     */
    email: string;
    /**
     * пароль пользователя
     */
    password: string;
};

export type User = {
    /**
     * Уникальный идентификатор
     */
    id: number;
    /**
     * дата создания, тип значения Date
     */
    createdAt: string;
    /**
     * дата изменения, тип значения Date
     */
    updatedAt: string;
    /**
     * имя пользователя
     */
    username: string;
    /**
     * информация о пользователе
     */
    about?: string;
    /**
     * ссылка на аватар
     */
    avatar?: string;
    /**
     * адрес электронной почты пользователя
     */
    email: string;
};

export type UpdateUserDto = {
    /**
     * имя пользователя
     */
    username?: string;
    /**
     * информация о пользователе
     */
    about?: string;
    /**
     * ссылка на аватар
     */
    avatar?: string;
    /**
     * адрес электронной почты пользователя
     */
    email?: string;
    /**
     * пароль пользователя
     */
    password?: string;
};

export type Wish = {
    /**
     * Уникальный идентификатор
     */
    id: number;
    /**
     * дата создания, тип значения Date
     */
    createdAt: string;
    /**
     * дата изменения, тип значения Date
     */
    updatedAt: string;
    /**
     * Заголовок мечты
     */
    name: string;
    /**
     * Изображение мечты
     */
    images: string;
    /**
     * ссылка на мечту
     */
    link?: string;
    /**
     * Стоимость мечты
     */
    price?: number;
    /**
     * Cумма предварительного сбора или сумма, которую пользователи сейчас готовы скинуть на мечту
     */
    raised?: number;
    /**
     * ссылка автора мечты
     */
    owner: User;
    /**
     * Достижения, которые относятся к мечте
     */
    steps: Array<(string)>;
    /**
     * Описание подарка
     */
    description: string;
    /**
     * Массив ссылок на заявки скинуться от других пользователей
     */
    offers: Array<(string)>;
    /**
     * Счётчик тех, кто скопировал мечту себе
     */
    copied: number;
};

export type FindUserDto = {
    /**
     * адрес электронной почты или имя пользователя
     */
    query: string;
};

export type CreateWishDto = {
    /**
     * Изображение мечты
     */
    images: string;
    /**
     * Стоимость мечты
     */
    price?: number;
    /**
     * описание мечты
     */
    description?: string;
};

export type UpdateWishDto = {
    /**
     * Изображение мечты
     */
    images?: string;
    /**
     * Стоимость мечты
     */
    price?: number;
    /**
     * описание мечты
     */
    description?: string;
};

export type CreateWishlistDto = {
    [key: string]: unknown;
};

export type UpdateWishlistDto = {
    [key: string]: unknown;
};

export type CreateOfferDto = {
    [key: string]: unknown;
};

export type CreateAchievementDto = {
    [key: string]: unknown;
};

export type Achievement = {
    /**
     * Уникальный идентификатор
     */
    id: number;
    /**
     * дата создания, тип значения Date
     */
    createdAt: string;
    /**
     * дата изменения, тип значения Date
     */
    updatedAt: string;
    /**
     * имя пользователя
     */
    name: string;
    /**
     * ссылка на изображение достижения
     */
    image?: string;
    /**
     * ссылка автора достижения
     */
    owner: User;
    /**
     * описание достижения
     */
    description?: string;
};

export type UpdateAchievementDto = {
    [key: string]: unknown;
};

export type AuthControllerSignUpData = {
    requestBody: CreateUserDto;
};

export type AuthControllerSignUpResponse = User;

export type AuthControllerSigninData = {
    requestBody: unknown;
};

export type AuthControllerSigninResponse = unknown;

export type UsersControllerMeResponse = User;

export type UsersControllerUpdateMeData = {
    requestBody: UpdateUserDto;
};

export type UsersControllerUpdateMeResponse = User;

export type UsersControllerGetMyWishesResponse = Array<Wish>;

export type UsersControllerFindOneByNameData = {
    name: string;
};

export type UsersControllerFindOneByNameResponse = User;

export type UsersControllerFindWishesByNameData = {
    name: string;
};

export type UsersControllerFindWishesByNameResponse = Array<Wish>;

export type UsersControllerFindData = {
    requestBody: FindUserDto;
};

export type UsersControllerFindResponse = User;

export type WishesControllerCreateData = {
    requestBody: CreateWishDto;
};

export type WishesControllerCreateResponse = Wish;

export type WishesControllerFindLastResponse = Array<Wish>;

export type WishesControllerFindTopResponse = Array<Wish>;

export type WishesControllerFindOneData = {
    id: string;
};

export type WishesControllerFindOneResponse = Wish;

export type WishesControllerUpdateData = {
    id: string;
    requestBody: UpdateWishDto;
};

export type WishesControllerUpdateResponse = Wish;

export type WishesControllerRemoveData = {
    id: string;
};

export type WishesControllerRemoveResponse = Wish;

export type WishesControllerCopyData = {
    id: string;
};

export type WishesControllerCopyResponse = Wish;

export type WishlistsControllerCreateData = {
    requestBody: CreateWishlistDto;
};

export type WishlistsControllerCreateResponse = unknown;

export type WishlistsControllerFindAllResponse = unknown;

export type WishlistsControllerFindOneData = {
    id: string;
};

export type WishlistsControllerFindOneResponse = unknown;

export type WishlistsControllerUpdateData = {
    id: string;
    requestBody: UpdateWishlistDto;
};

export type WishlistsControllerUpdateResponse = unknown;

export type WishlistsControllerRemoveData = {
    id: string;
};

export type WishlistsControllerRemoveResponse = unknown;

export type OffersControllerCreateData = {
    requestBody: CreateOfferDto;
};

export type OffersControllerCreateResponse = unknown;

export type OffersControllerFindAllResponse = unknown;

export type OffersControllerFindOneData = {
    id: string;
};

export type OffersControllerFindOneResponse = unknown;

export type AchievementsControllerCreateData = {
    requestBody: CreateAchievementDto;
};

export type AchievementsControllerCreateResponse = Achievement;

export type AchievementsControllerFindLastResponse = Array<Achievement>;

export type AchievementsControllerFindOneData = {
    id: string;
};

export type AchievementsControllerFindOneResponse = Achievement;

export type AchievementsControllerUpdateData = {
    id: string;
    requestBody: UpdateAchievementDto;
};

export type AchievementsControllerUpdateResponse = Achievement;

export type AchievementsControllerRemoveData = {
    id: string;
};

export type AchievementsControllerRemoveResponse = Achievement;

export type AchievementsControllerCopyData = {
    id: string;
};

export type AchievementsControllerCopyResponse = Achievement;

export type $OpenApiTs = {
    '/signup': {
        post: {
            req: AuthControllerSignUpData;
            res: {
                /**
                 * Пользователь успешно создан.
                 */
                200: User;
            };
        };
    };
    '/signin': {
        post: {
            req: AuthControllerSigninData;
            res: {
                /**
                 * Успешная авторизация.
                 */
                200: unknown;
            };
        };
    };
    '/users/me': {
        get: {
            res: {
                /**
                 * Пользователь
                 */
                200: User;
            };
        };
        patch: {
            req: UsersControllerUpdateMeData;
            res: {
                /**
                 * Пользователь
                 */
                200: User;
            };
        };
    };
    '/users/me/wishes': {
        get: {
            res: {
                /**
                 * Мои подарки
                 */
                200: Array<Wish>;
            };
        };
    };
    '/users/{name}': {
        get: {
            req: UsersControllerFindOneByNameData;
            res: {
                /**
                 * Пользователь
                 */
                200: User;
            };
        };
    };
    '/users/{name}/wishes': {
        get: {
            req: UsersControllerFindWishesByNameData;
            res: {
                /**
                 * Подарки пользователя
                 */
                200: Array<Wish>;
            };
        };
    };
    '/users/find': {
        post: {
            req: UsersControllerFindData;
            res: {
                /**
                 * Пользователь
                 */
                200: User;
            };
        };
    };
    '/wishes': {
        post: {
            req: WishesControllerCreateData;
            res: {
                /**
                 * Мечта
                 */
                200: Wish;
            };
        };
    };
    '/wishes/last': {
        get: {
            res: {
                /**
                 * Последние мечты
                 */
                200: Array<Wish>;
            };
        };
    };
    '/wishes/top': {
        get: {
            res: {
                /**
                 * Популярные мечты
                 */
                200: Array<Wish>;
            };
        };
    };
    '/wishes/{id}': {
        get: {
            req: WishesControllerFindOneData;
            res: {
                /**
                 * Мечта по идентификатору
                 */
                200: Wish;
            };
        };
        patch: {
            req: WishesControllerUpdateData;
            res: {
                /**
                 * Редактирование мечты
                 */
                200: Wish;
            };
        };
        delete: {
            req: WishesControllerRemoveData;
            res: {
                /**
                 * Удаление мечты
                 */
                200: Wish;
            };
        };
    };
    '/wishes/{id}/copy': {
        post: {
            req: WishesControllerCopyData;
            res: {
                /**
                 * Скопировать мечту
                 */
                200: Wish;
            };
        };
    };
    '/wishlistlists': {
        post: {
            req: WishlistsControllerCreateData;
            res: {
                201: unknown;
            };
        };
        get: {
            res: {
                200: unknown;
            };
        };
    };
    '/wishlistlists/{id}': {
        get: {
            req: WishlistsControllerFindOneData;
            res: {
                200: unknown;
            };
        };
        patch: {
            req: WishlistsControllerUpdateData;
            res: {
                200: unknown;
            };
        };
        delete: {
            req: WishlistsControllerRemoveData;
            res: {
                200: unknown;
            };
        };
    };
    '/offers': {
        post: {
            req: OffersControllerCreateData;
            res: {
                201: unknown;
            };
        };
        get: {
            res: {
                200: unknown;
            };
        };
    };
    '/offers/{id}': {
        get: {
            req: OffersControllerFindOneData;
            res: {
                200: unknown;
            };
        };
    };
    '/achievement': {
        post: {
            req: AchievementsControllerCreateData;
            res: {
                /**
                 * Создание достижения
                 */
                200: Achievement;
            };
        };
    };
    '/achievement/last': {
        get: {
            res: {
                /**
                 * Последние достижения
                 */
                200: Array<Achievement>;
            };
        };
    };
    '/achievement/{id}': {
        get: {
            req: AchievementsControllerFindOneData;
            res: {
                /**
                 * Получение достижения
                 */
                200: Achievement;
            };
        };
        patch: {
            req: AchievementsControllerUpdateData;
            res: {
                /**
                 * Обновление достижения
                 */
                200: Achievement;
            };
        };
        delete: {
            req: AchievementsControllerRemoveData;
            res: {
                /**
                 * Удаление достижения
                 */
                200: Achievement;
            };
        };
    };
    '/achievement/{id}/copy': {
        post: {
            req: AchievementsControllerCopyData;
            res: {
                /**
                 * Копирование достижения
                 */
                200: Achievement;
            };
        };
    };
};